import yaml

configfile: "config.yaml" # <- eigen workingdir


database_file = "data2/databases/BOLD_{}_barcodes.db".format(config["marker"])


rule untar:
    input: config["file_names"]["bold_zip"]
    output: config["file_names"]["bold_tsv"]
    threads: config["cpu_cores"]
    script:
        "unzip_targz.py"

rule extract_BOLD:
  input: config["file_names"]["bold_tsv"]
  output: database_file
  params: marker=config["marker"]
  threads: config["cpu_cores"]
  script:
      "bold_data_dump.py"


rule all:
    input: database_file

#
# rule alter_db:
#     # The same Datbase will be altered
#     output:
#         DATABASE
#     input:
#         DATABASE
#     script:
#         tables="alter_tables"
#     shell:
#         python script {input} > {output}
#
# rule add_ott:
#     output:
#         DATABASE
#     input:
#         DATABASE
#     script:
#         ott = "map_opentol.py"
#     shell:
#         python script {input.ott} > output
#
# rule download_masce:
#     output:
#         {datadir}
#     input:
#         {url}
#     shell:
#         "wget -P {outdir} {url}"
#
# rule make_family_fasta:
#     params:
#         directory=DIR
#     output:
#         directory=file
#     input:
#         DATABASE
#     script:
#         "family_fasta.py"
#     shell:
#         python {script} {input} > {DIR}/{file}
#
# rule align:
#     input:
#         directory={DIR}
#     output:
#         directory={DIR}
#     threads: X
#     script:
#         "create_MSA.py"
#     shell:
#         for f in {input}:
#             python {script} > {output}
#
# rule tree:
#     input:
#         {MSA dir}
#     output:
#         {tree dir}
#     script:
#         {create_tree}
#     threads: X
#     shell:
#         for f in {input}:
#             python {script} > {output}
#
# rule display_tree:
#     input:
#         {newick_string}
#     output:
#         {file.png}  # To download subtrees
#     script:
#         {display_tree?}
#     shell:
#         python {script} {input} > {output}
#
#



